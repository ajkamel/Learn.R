// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require_tree .

var lessonID;
var stage, robot, background, orientation;
var robotImage = new Image();
var backgroundImage = new Image();
var gridRow, gridCol;
var solutionRow, solutionCol;
var YGRIDUNIT = 100;
var XGRIDUNIT = 100;
var MAPSIZE = 6;
var map = [];

function initMap(lesson) {
  var mapCode = lesson.map_code.split(",");
  for (var i = 0; i < MAPSIZE; i++) {
    map[i] = [];
    for (var j = 0; j < MAPSIZE; j++) {
      map[i][j] = Number(mapCode.shift());
    };
  };
}

function getCodeLesson() {
  lessonID = $('.lesson-id').eq(0).data().id;
  var lesson = $.ajax({
    url: ('/code_lessons/' + lessonID),
    method: 'get',
    dataType: 'json',
    async: false
  });
  return lesson.responseJSON;
}

function initCodeLesson(lesson) {
  initMap(lesson);
  gridRow = lesson.start_row;
  gridCol = lesson.start_col;
  solutionRow = lesson.solution_row;
  solutionCol = lesson.solution_col;
  stage = new createjs.Stage(document.getElementById("lessoncanvas"));
  robotImage.src = "<%= asset_path 'robot.png' %>";
  robotImage.name = 'robot';

  // THIS IS THE BAD PLACE
  backgroundImage.src = "/assets/" + lesson.img;
  backgroundImage.name = 'background';
  backgroundImage.onload = loadGridGraphics;
  robotImage.onload = setTimeout(loadRobotGraphics, 100);
  stage.update();
}

function loadGridGraphics() {
  background = new createjs.Bitmap(backgroundImage);
  stage.addChild(background);
  stage.update();
}

function loadRobotGraphics() {
  robot = new createjs.Bitmap(robotImage);
  robot.regX = robot.image.width/2;
  robot.regY = robot.image.height/2;
  robot.x = XGRIDUNIT * gridCol + robot.regX
  robot.y = YGRIDUNIT * gridRow + robot.regY
  orientation = 'east';
  stage.addChild(robot);
  stage.update();
}

function getUser() {
  var userID = $('.user-id').eq(0).data().id;
  var user = $.ajax({
    url: ('/users/' + usersID),
    method: 'get',
    dataType: 'json',
    async: false
  });
  return user.responseJSON;
}

function ready() {
  if ($('#music-lessons-page')[0] !== undefined) {
    initMusicLesson(getMusicLesson());
  }
  if ($('#code_lessons_page')[0] !== undefined) {
    initCodeLesson(getCodeLesson());
  }

  $('#lesson_box h3').click(function(event){
    $(this).next().slideToggle();
  })
}

$(document).ready(ready);
$(document).on('page:load', ready);
